pipeline {
    agent any
    tools{
        maven 'maven'
    }
    environment {
        registry = "albatros123/kubernetes" 
        registryCredential = 'bf3d08a2-c3fc-4e5c-a418-126f625839a3'
        dockerImage = ''
        
    }
    stages {
        stage('Cloning git') { 
            steps {
                echo 'Clone the repo'
                sh 'rm -r LogicDoc'
                sh 'git clone https://github.com/logicaldoc/community.git ~/workspace/git-docker-kubernetes/LogicDoc'
            }
        }
        stage('Maven test') {
            steps {
                script {
                    warnError(message: "Maven test stage was unstable.", catchInterruptions: false) {
                    sh 'mvn clean test'
                    }
                }
            }
        }
        stage('Building image') { 
            
            steps {
                script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER"
                }
            }
        }
        stage('Creating Docker image') { 
            steps {
                script {
                    docker.withRegistry('', registryCredential) { 
                    dockerImage.push()
                    dockerImage.push('latest')
                    }
                }
            }
        }
        stage('Deploy') { 
            steps { 
                    sh "minikube start"
                    sh "kubectl delete deployment hello-k8s"
                    sh "kubectl delete services hello-k8s"
                    sh "kubectl create deployment hello-k8s --image=albatros123/kubernetes:''"
                    sh "kubectl expose deployment hello-k8s --type=NodePort --port=80"
                    sh "minikube service hello-k8s"
                }
            } 
        }
        post {
            always {
                sh 'docker logout'
            }
        } 
    }