pipeline {
    agent any
    tools{
        maven 'maven'
    }
    environment {
        registry = "albatros123/testing" 
        registryCredential = "docker-acc"
        dockerImage = ''
        
    }
    stages {
        stage('Cloning git') { 
            steps {
                echo 'Clone the git'
                sh 'rm -r community'
                sh 'git clone https://github.com/logicaldoc/community.git --branch 8.7.3'
            }
        }
        stage('Maven testing') {
            steps {
                script {
                    // maven version
                    sh 'mvn -v'
                    // maven clean install in parent pom.xml
                    sh 'mvn -f community/build/poms clean install'
                }
            }
        }
        stage('Building image'){ 
            steps {
                script {
                    dockerImage = docker.build registry + ":$BUILD_NUMBER" 
                }
            }
        }
        stage("Dockerize image"){ 
            steps {
                script {
                    docker.withRegistry('', registryCredential) { 
                    dockerImage.push('latest')
                    }
                }
            }
        }
        stage('Deploy'){ 
            steps { 
                    sh "minikube start"
                    sh "kubectl delete deployment hello-k8s"
                    sh "kubectl delete services hello-k8s"
                    sh "kubectl create deployment hello-k8s --image=albatros123/kubernetes:''"
                    sh "kubectl expose deployment hello-k8s --type=NodePort --port=80"
                    sh "minikube service hello-k8s"
                }
            } 
        }
        post {
            always {
                sh "docker logout"
                sh "minikube status"
            }
        } 
    }